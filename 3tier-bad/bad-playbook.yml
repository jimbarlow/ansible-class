---
# Bad ansible! This playbook is an example of poor/bad practices!
# Bad practices may include:
#
#   Poor formatting and structure
#   Poor use of YAML - but good enough to parse
#   Inconsistent style
#   Incorrect use of modules
#   Poor module choice
#   Unclear names
#   Hard coding / poor use of variables
#   Roles - what are roles?
#   Bare variables
#   No use of handlers

- name: Deploy the application

  gather_facts: false # remove later! speeds up testing

- roles
    - reposetup
    - deploy haproxy

- name: deploy haproxy
  hosts: frontends
  become: true

  tasks:
  - name: Needed Packages Installed and Enabled
    package:
      name: "{{ item }}"
      state: latest
      enabled: True
      # httpie, HAproxy
    with_items: "{{ packagelist }}"

  - name: install HAProxy
    yum:
      name=haproxy state=latest

  - name: enable HAProxy
    service:
      name: haproxy
      state: started

  - name: HAProxy configured
    template:
      src: templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    notify: restart HAproxy
  - name: restart HAproxy
    # move to handlers
    service:
      name: haproxy
      state: restarted

- name: deploy tomcat
  # mvove to tomcat deplayment role
  hosts: apps
  become: true

  tasks:
  - name: Tomcat Installed and Enabled 
    package:
      name: tomcat
      state: latest
      enabled: True
    when: apps in {{ hosts }}

  - name: Tomcat Directory Created
    file:
      path: /usr/share/tomcat/webapps/ROOT
      state: directory
    # should start tomcat?
  - name: restart tomcat
    # move to handlers
    service:
      name: tomcat
      state: restarted

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: templates/index.html.j2
      dest: /usr/share/tomcat/webapps/ROOT/index.html
      mode: 0644
    notify: restart tomcat


- name: index.html on app {{ host }}
  hosts: app1
  gather_facts: false
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: index.html on app 1
  hosts: app2
  gather_facts: false
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: deploy postgres
  hosts: apps
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  - name: install progress
    command: "yum install -y postgresql-server"

  #- name: install postgres
  #  yum:
  #    name: postgresql-server
  #    state: latest
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
  - name: tell user to finish setting up postgres
    debug:
      msg: "Either uncomment the postgres setup or manually login and initialize"

 # only run the next 2 tasks once!
#  - name: initilize postgres
#    command: postgresql-setup initdb
#  - name: initilize postgres some more
#    command: chkconfig postgresql on
  - name: start postgres
    service:
      name: postgresql.service
      state: started

- name: deploy apache
  hosts: apps
  gather_facts: false
  become: true
  hosts: apps
  tasks:
  - name: install apache
    yum:
      name: httpd
      state: latest
  - name: enable apache at boot
    service:
      name: httpd
      enabled: yes
  - name: start apache
    service:
      name: httpd
      state: started
